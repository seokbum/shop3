#워클 플로우 이름 Action에 표시 되는 이름
name: Docker Deploy to EC2

# 실행 조건. main 브랜치에 push 발생시  jobs 실행
on:
  push:
    branches:
      - main
# 실행할 기능 설정
jobs:
  deploy:
    name: Deploy to EC2 with Docker # Job의 이름
    runs-on: ubuntu-latest # 배포 서버의 실행환경. 우분트 최신 버전

    steps:
      - name: Checkout source code
        uses: actions/checkout@v3 #GITHUB 제공 액션.

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2 # 댈티 플랫폼 빌드 가능 도구

      - name: Build Docker image
        run: docker build -t gdj90/shop3:${{ github.run_number }} . # shop3를 도커 이미지로 생성

      - name: Save Docker image as tar
        run: |
          docker save gdj90/shop3:${{ github.run_number }} -o shop3.tar  #이미지를 압축파일 생성
          chmod 644 shop3.tar # 파일권한에 읽기 가능

      - name: Copy image tar to EC2
        uses: appleboy/scp-action@v0.1.7 # SSH SCP 프로토콜을 이용하여 전송
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_KEY }}
          source: "./shop3.tar"
          target: "/home/ubuntu"
          overwrite: true # 파일이 존재하면 덮어쓰기 가능
          strip_components: 0 # 경로 유지 필요 없어

      - name: Run Docker container on EC2 #EC2 서버에서 도커 컨테이너 생성
        uses: appleboy/ssh-action@v1.0.0
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_KEY }}
          script: |
            docker stop shop3 || true  # shop3 컨테이너 중지. 없으면 오류 무시
            docker rm shop3 || true    # shop3 컨테이너 제거. 없으면 오류 무시
            docker image rm gdj90/shop3:${{ github.run_number }} || true # 기존 이미지 제거
            docker load -i shop3.tar # 이미지 파일로 복원. 도커 이미지 생성
            docker run -d --name shop3 -p 8080:8080 \
              -v /home/ubuntu/upload:/app/upload \
              gdj90/shop3:${{ github.run_number }}