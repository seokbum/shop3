name: Docker Deploy to EC2

on:
  push:
    branches:
      - main

jobs:
  deploy:
    name: Deploy to EC2 with Docker
    runs-on: ubuntu-latest

    steps:
      - name: Checkout source code
        uses: actions/checkout@v3

      - name: Verify project files
        run: ls -la  # 프로젝트 파일 구조 확인

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Debug Gradle build
        run: ./gradlew build -x test --stacktrace --debug  # Gradle 디버그 로그

      - name: Build Docker image
        run: docker build --progress=plain --memory 4g -t gdj90/shop3:${{ github.run_number }} .

      - name: Save Docker image as tar
        run: |
          docker save gdj90/shop3:${{ github.run_number }} -o shop3.tar
          chmod 644 shop3.tar

      - name: Copy image tar to EC2
        uses: appleboy/scp-action@v0.1.7
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_KEY }}
          source: "./shop3.tar"
          target: "/home/ubuntu"
          overwrite: true
          strip_components: 0

      - name: Run Docker container on EC2
        uses: appleboy/ssh-action@v1.0.0
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_KEY }}
          script: |
            docker stop shop3 || true
            docker rm shop3 || true
            docker image rm gdj90/shop3:${{ github.run_number }} || true
            docker load -i shop3.tar
            docker run -d --name shop3 -p 8080:8080 \
              -v /home/ubuntu/upload:/app/upload \
              -e DB_HOST=${{ secrets.DB_HOST }} \
              -e DB_USER=${{ secrets.DB_USER }} \
              -e DB_PASSWORD=${{ secrets.DB_PASSWORD }} \
              gdj90/shop3:${{ github.run_number }}